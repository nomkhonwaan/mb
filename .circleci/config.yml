version: 2

jobs:
  mb-web_install:
    docker:
      - image: circleci/node:8
    working_directory: ~/repo
    steps:
      - checkout
      - run: |
          echo '@fortawesome:registry=https://npm.fontawesome.com/' > ~/.npmrc
          echo "//npm.fontawesome.com/:_authToken=${FONT_AWESOME_NPM_TOKEN}" >> ~/.npmrc
      - run: |
          cd ./mb-web
          npm install
          npm run build-css
      - save_cache:
          paths:
            - ./mb-web/node_modules
          key: node-{{ checksum "./mb-web/package-lock.json" }}
      - persist_to_workspace:
          root: ./mb-web
          paths: 
            - ./src
  mb-web_test:
    docker:
      - image: circleci/node:8
    working_directory: ~/repo
    steps:
      - checkout
      - attach_workspace:
          at: ./mb-web
      - restore_cache:
          keys:
            - node-{{ checksum "./mb-web/package-lock.json" }}
      - run: |
          cd ./mb-web
          npm test
  mb-web_build:
    docker:
      - image: circleci/node:8
    working_directory: ~/repo
    steps:
      - checkout
      - attach_workspace:
          at: ./mb-web
      - restore_cache:
          keys:
            - node-{{ checksum "./mb-web/package-lock.json" }}
      - run: |
          cd ./mb-web
          npm run build-js
      - persist_to_workspace:
          root: ./mb-web
          paths: 
            - build
  mb-web_deploy_to_firebase:
    docker:
      - image: circleci/node:8
    working_directory: ~/repo
    steps:
      - checkout
      - attach_workspace:
          at: ./mb-web
      - restore_cache:
          keys:
            - node-{{ checksum "./mb-web/package-lock.json" }}
      - run: |
          cd ./mb-web
          npx firebase use www-nomkhonwaan-com --token=${FIREBASE_TOKEN}
          npx firebase deploy --token=${FIREBASE_TOKEN}
  mb-server_test:
    docker:
      - image: circleci/openjdk:8-jdk
    working_directory: ~/repo
    steps:
      - checkout
      - run: ./gradlew :mb-server:test
      - run: |
          ./gradlew :mb-server:check :mb-server:jacocoTestReport
          bash <(curl -s https://codecov.io/bash)
      - save_cache:
          paths:
            - ~/.gradle
          key: gradle-{{ checksum "./build.gradle" }}
  mb-server_build_to_jar:
    docker:
      - image: circleci/openjdk:8-jdk
    working_directory: ~/repo
    steps:
      - checkout
      - restore_cache:
          keys:
            - gradle-{{ checksum "./build.gradle" }}
      - run: ./gradlew :mb-server:bootJar
      - persist_to_workspace:
          root: ./mb-server
          paths:
            - ./build
  mb-server_build_to_docker:
    machine: true
    working_directory: ~/repo
    steps:
      - checkout
      - attach_workspace:
          at: ./mb-server
      - run: |
          docker build -t nomkhonwaan/mb-server:latest -f ./mb-server/Dockerfile ./mb-server
          docker login -u $DOCKER_USERNAME -p ${DOCKER_PASSWORD}
          docker push nomkhonwaan/mb-server:latest
  mb-server_deploy_to_docker_deploy_webhook:
    machine: true
    steps:
      - run: |
          curl \
            -H 'Content-Type: application/json' \
            -d '{"repository": { "repo_name": "nomkhonwaan/mb-server" }, "push_data": { "tag": "latest" } }' \
            ${DOCKER_DEPLOY_WEBHOOK_PRODUCTION}

workflows:
  version: 2
  mb-server_workflow:
    jobs:
      - mb-server_test
      - mb-server_build_to_jar:
          requires:
            - mb-server_test
      - mb-server_build_to_docker:
          requires:
            - mb-server_build_to_jar
          filters:
            branches:
              only:
                - master
      - hold:
          type: approval
          filters:
            branches:
              only:
                - master
      - mb-server_deploy_to_docker_deploy_webhook:
          requires:
            - mb-server_build_to_docker
            - hold
          filters:
            branches:
              only:
                - master
  mb-web_workflow:
    jobs:
      - mb-web_install
      - mb-web_test:
          requires:
            - mb-web_install
      - mb-web_build:
          requires:
            - mb-web_test
      - hold:
          type: approval
          filters:
            branches:
              only:
                - master
      - mb-web_deploy_to_firebase:
          requires:
            - mb-web_build
            - hold
          filters:
            branches:
              only:
                - master