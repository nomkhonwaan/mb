buildscript {
    ext {
        junitVersion = '5.2.0'
        spekVersion = '2.0.0-rc.1'
    }

    repositories {
        jcenter()
    }

    dependencies {
        classpath('org.jetbrains.kotlin:kotlin-gradle-plugin:1.3.20')
        classpath('org.jetbrains.kotlin:kotlin-allopen:1.3.20')
        classpath('org.springframework.boot:spring-boot-gradle-plugin:2.1.2.RELEASE')
    }
}

subprojects {
    apply(plugin: 'idea')
    apply(plugin: 'jacoco')
    apply(plugin: 'java')
    apply(plugin: 'kotlin')
    apply(plugin: 'kotlin-spring')
    apply(plugin: 'org.springframework.boot')
    apply(plugin: 'io.spring.dependency-management')

    group = 'com.nomkhonwaan.mb'
    version = '1.0.0'

    sourceCompatibility = JavaVersion.VERSION_1_8

    compileKotlin {
        kotlinOptions {
            freeCompilerArgs = ["-Xjsr305=strict"]
            jvmTarget = JavaVersion.VERSION_1_8
        }
    }

    compileTestKotlin {
        kotlinOptions {
            freeCompilerArgs = ["-Xjsr305=strict"]
            jvmTarget = JavaVersion.VERSION_1_8
        }
    }

    repositories {
        jcenter()
    }

    dependencies {
        implementation('org.jetbrains.kotlin:kotlin-reflect')
        implementation('org.jetbrains.kotlin:kotlin-stdlib-jdk8')
        implementation('org.springframework.boot:spring-boot-starter-data-mongodb')
        
        testImplementation('org.jetbrains.kotlin:kotlin-test-common')
        testImplementation('org.junit.jupiter:junit-jupiter-api:5.2.0')
        testImplementation ('org.spekframework.spek2:spek-dsl-jvm:2.0.0-rc.1')  {
            exclude(group: 'org.jetbrains.kotlin')
        }

        testRuntime('org.junit.jupiter:junit-jupiter-engine:5.2.0')

        testRuntimeOnly ('org.spekframework.spek2:spek-runner-junit5:2.0.0-rc.1') {
            exclude(group: 'org.junit.platform')
            exclude(group: 'org.jetbrains.kotlin')
        }
    }

    test {
        useJUnitPlatform {
            includeEngines('spek2')
        }
    }

    jacocoTestReport {
        reports {
            xml.enabled(true)
            html.enabled(true)
        }
    }

    check.dependsOn(jacocoTestReport)
    
    jar {
        enabled = true
    }
}
