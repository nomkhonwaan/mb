buildscript {
    ext {
        junitVersion = '5.2.0'
        kotlinVersion = '1.3.11'
        spekVersion = '2.0.0-rc.1'
    }

    repositories {
        jcenter()
    }

    dependencies {
        classpath("org.jetbrains.kotlin:kotlin-gradle-plugin:${kotlinVersion}")
        classpath("org.jetbrains.kotlin:kotlin-allopen:${kotlinVersion}")
    }
}

subprojects {
    apply(plugin: 'idea')
    apply(plugin: 'jacoco')
    apply(plugin: 'java')
    apply(plugin: 'kotlin')

    group = 'com.nomkhonwaan.mb'
    version = '1.0.0'

    sourceCompatibility = JavaVersion.VERSION_1_8

    compileKotlin {
        kotlinOptions {
            freeCompilerArgs = ["-Xjsr305=strict"]
            jvmTarget = JavaVersion.VERSION_1_8
        }
    }

    compileTestKotlin {
        kotlinOptions {
            freeCompilerArgs = ["-Xjsr305=strict"]
            jvmTarget = JavaVersion.VERSION_1_8
        }
    }

    repositories {
        jcenter()
    }

    dependencies {
        implementation("org.jetbrains.kotlin:kotlin-reflect:${kotlinVersion}")
        implementation("org.jetbrains.kotlin:kotlin-stdlib-jdk8:${kotlinVersion}")

        testImplementation("org.jetbrains.kotlin:kotlin-test-common:${kotlinVersion}")
        testImplementation("org.junit.jupiter:junit-jupiter-api:${junitVersion}")
        testImplementation ("org.spekframework.spek2:spek-dsl-jvm:${spekVersion}")  {
            exclude(group: 'org.jetbrains.kotlin')
        }

        testRuntime("org.junit.jupiter:junit-jupiter-engine:${junitVersion}")

        testRuntimeOnly ("org.spekframework.spek2:spek-runner-junit5:${spekVersion}") {
            exclude(group: 'org.junit.platform')
            exclude(group: 'org.jetbrains.kotlin')
        }
    }

    test {
        useJUnitPlatform {
            includeEngines('spek2')
        }
    }

    jacocoTestReport {
        reports {
            xml.enabled(true)
            html.enabled(true)
        }
    }

    check.dependsOn(jacocoTestReport)
}
