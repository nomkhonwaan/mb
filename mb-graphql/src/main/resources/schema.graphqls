schema {
    query: Query

    mutation: Mutation
}

# The query root of the GraphQL
type Query {
    # Return a list of Categories
    categories: [Category]!

    # Return a list of published Posts ordered by "publishedAt" descending
    latestPublishedPosts(offset: Int = 0, limit: Int = 5): [Post]!

    # Return a list of draft Posts ordered by "createdAt" descending
    latestDraftPosts(offset: Int = 0, limit: Int = 5): [Post]!
}

# The mutation root of the GraphQL
type Mutation {
    # Create a new Post with DRAFT status and empty categories and tags
    createPost: Post!

    # Update a title of the Post
    updatePostTitle(input: UpdatePostTitleInput!): Post
}

# A group of Posts regarded as having particular shared characteristics
type Category {
    id: ID!

    # A name of the Category
    name: String

    # A valid URL string composes with name and ID
    slug: String

    # Return a list of published Posts ordered by "publishedAt" descending
    latestPublishedPosts(offset: Int = 0, limit: Int = 5): [Post]!
}

# A piece of content in the blog platform
type Post {
    id: ID!

    # A title of the Post
    title: String

    # A valid URL string composes with title and ID
    slug: String

    # A status that indicates the type of the Post whether publicly or privately
    status: Status

    # An original content of the Post in markdown syntax
    markdown: String

    # A content of the Post in HTML format translated from markdown
    html: String

    # An author of the Post
    author: User!

    # A list of Categories that the Post belonging to
    categories: [Category]!

    # An RFC3339 datetime that the Post was published
    publishedAt: String

    # An RFC3339 datetime that the Post was created
    createdAt: String

    # An RFC3339 datetime that the Post was updated
    updatedAt: String
}

# An authorized User who can write the Post or Comment
type User {
    id: ID!

    # A valid URL string of the avatar URL
    avatarURL: String

    # A name of the User
    displayName: String!
}

enum Status {
    DRAFT
    PUBLISHED
}

# An input type for updating Post title
input UpdatePostTitleInput {
    id: ID!

    # A title of the Post
    title: String!
}
